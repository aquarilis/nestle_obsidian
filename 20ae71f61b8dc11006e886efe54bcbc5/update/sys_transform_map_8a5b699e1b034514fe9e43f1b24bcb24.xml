<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_transform_map">
    <sys_transform_map action="INSERT_OR_UPDATE">
        <active>true</active>
        <copy_empty_fields>true</copy_empty_fields>
        <create_new_record_on_empty_coalesce_fields>false</create_new_record_on_empty_coalesce_fields>
        <enforce_mandatory_fields>No</enforce_mandatory_fields>
        <name>(DXC) Obsidian - 01 - Models TM</name>
        <order>100</order>
        <run_business_rules>true</run_business_rules>
        <run_script>true</run_script>
        <script><![CDATA[(function transformRow(source, target, map, log, isUpdate) {

	try {

		if (action == "insert") {
			var obsidian_NML_GR = new GlideRecord(x_nesa_ng_obsidian.DXCObsidianConstants.NML_TABLE_NAMES.NML_TABLE);
			obsidian_NML_GR.initialize();
			obsidian_NML_GR.setValue("short_description", target.name);
			obsidian_NML_GR.setValue("active", false);
			obsidian_NML_GR.setValue("state", "3");
			obsidian_NML_GR.setValue("close_code", "Complete");
			obsidian_NML_GR.setValue("nml_stage", "600");
			target.obsidian_new_model_launch = obsidian_NML_GR.sys_id = obsidian_NML_GR.insert();
		}

		target.nml_stage = "600";

		if (source.u_class_model_category != "") {
			var sourceModelClassCategory = source.u_class_model_category.toLowerCase().replace(/\s/g, "_");

			var validModelClassCategories = [
				"accessory---milk_module",
				"accessory---other",
				"accessory---payment_system",
				"accessory---filtration",
				"accessory---fridge",
				"accessory---coffee_corner",
				"accessory---grinder",
				"accessory---capsules",
				"accessory---telemetry",
				"accessory---base_cabinet",
				"dispenser---cold",
				"dispenser---roaster",
				"dispenser---combi_r&g",
				"dispenser---pure_r&g",
				"dispenser---soluble",
				"dispenser---food_or_snack",
				"dispenser---hot_water",
				"dispenser---other",
				"dispenser---hot _liquid",
			];

			if (validModelClassCategories.indexOf(sourceModelClassCategory) == -1){
				throw "invalid sourceModelClassCategory detected: " + sourceModelClassCategory;
			}

			var modelCategoryArray = source.u_class_model_category.split("---");
		
			target.model_class = modelCategoryArray[0];
			target.model_category = modelCategoryArray[1];
		}

	} catch (e) {
		error = true;
		log.error("error in Models TM main script: " + e);
	}

})(source, target, map, log, action === "update");]]></script>
        <source_table>x_nesa_ng_obsidian_obsidian_model_import</source_table>
        <sys_class_name>sys_transform_map</sys_class_name>
        <sys_created_by>admin_Luu-Ly_Mai</sys_created_by>
        <sys_created_on>2022-04-26 06:27:20</sys_created_on>
        <sys_id>8a5b699e1b034514fe9e43f1b24bcb24</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>(DXC) Obsidian - 01 - Models TM</sys_name>
        <sys_package display_value="NexGen Obsidian Management" source="x_nesa_ng_obsidian">20ae71f61b8dc11006e886efe54bcbc5</sys_package>
        <sys_policy/>
        <sys_scope display_value="NexGen Obsidian Management">20ae71f61b8dc11006e886efe54bcbc5</sys_scope>
        <sys_update_name>sys_transform_map_8a5b699e1b034514fe9e43f1b24bcb24</sys_update_name>
        <sys_updated_by>admin_luu-ly_mai</sys_updated_by>
        <sys_updated_on>2022-06-20 07:38:11</sys_updated_on>
        <target_table>x_nesa_ng_obsidian_obsidian_model</target_table>
    </sys_transform_map>
</record_update>
