<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_nesa_ng_obsidian_m2m_obsidian_option_dependency</collection>
        <condition/>
        <description>(DXC) this BR prevents having a configuration related to two options from the same feature</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>(DXC) Prevent sibling feature options</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
   try {
      var siblingRelatedFeature_GR = new GlideRecord("x_nesa_ng_obsidian_m2m_obsidian_option_dependency");
      siblingRelatedFeature_GR.addQuery("obsidian_model_configuration", current.obsidian_model_configuration);
      siblingRelatedFeature_GR.addQuery("obsidian_feature_option.model_feature", current.obsidian_feature_option.model_feature);
      siblingRelatedFeature_GR.addQuery("obsidian_feature_option", "!=", current.obsidian_feature_option);
      siblingRelatedFeature_GR.query();
      if (siblingRelatedFeature_GR.next()) {
         current.setAbortAction(true);
               
         var message = gs.getMessage("Dependency between '{0}' and '{1}' discarded: there is already a dependency between Model Configuration '{2}' and a Feature Option within Model Feature '{4}' ('{3}') - a Model Configuration cannot have dependencies with multiples Feature options of the same Model Feature");
         message = message.replace("{0}", current.obsidian_feature_option.name);
         message = message.replace("{1}", current.obsidian_model_configuration.name);
         message = message.replace("{2}", current.obsidian_model_configuration.name);
         message = message.replace("{3}", siblingRelatedFeature_GR.obsidian_feature_option.name);
         message = message.replace("{4}",  current.obsidian_feature_option.model_feature.name);

         gs.addErrorMessage(message);
      
      }

   } catch (exception) {
      var dxcLogger = new global.DXCGSLog("com.dxc.global.debugging_level", "(DXC) Prevent sibling feature options");
      dxcLogger.logError(exception);
   }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin_Luu-Ly_Mai</sys_created_by>
        <sys_created_on>2022-03-31 11:11:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4a03b40a1b26c950fe9e43f1b24bcbff</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>(DXC) Prevent sibling feature options</sys_name>
        <sys_overrides/>
        <sys_package display_value="NexGen Obsidian Management" source="x_nesa_ng_obsidian">20ae71f61b8dc11006e886efe54bcbc5</sys_package>
        <sys_policy/>
        <sys_scope display_value="NexGen Obsidian Management">20ae71f61b8dc11006e886efe54bcbc5</sys_scope>
        <sys_update_name>sys_script_4a03b40a1b26c950fe9e43f1b24bcbff</sys_update_name>
        <sys_updated_by>admin_luu-ly_mai</sys_updated_by>
        <sys_updated_on>2022-04-03 19:42:56</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=4a03b40a1b26c950fe9e43f1b24bcbff"/>
</record_update>
