<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_nesa_ng_obsidian.DXCObsidianCommonUtilsAJAX</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>DXCObsidianCommonUtilsAJAX</name>
        <script><![CDATA[var DXCObsidianCommonUtilsAJAX = Class.create();
DXCObsidianCommonUtilsAJAX.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

	//function used in "One of my Obsidian Market" dynamic filter
	//LMA inhibited for now - recheck if "one of my obsidian Market" dynamic filter makes sense 
	// getMyValidMarkets: function () {
	// 	return new DXCObsidianCommonUtils().getValidMarketsForUser(gs.getUserID());
	// },


	//function used in "One of my Obsidian Countries" dynamic filter
	getMyValidCountries: function () {
		return new DXCObsidianCommonUtils().getCountriesCoveredByUser(gs.getUserID());
	},

	getTSMavailableForCurrentUser: function () {
		return new DXCTechnicalSolutionManagementUtils().getTSMavailableForCurrentUser();
	},

	getMySuppliers: function () {
		return new DXCObsidianCommonUtils().getSuppliersForUser(gs.getUserID());
	},

	type: 'DXCObsidianCommonUtilsAJAX'
});


DXCObsidianCommonUtilsAJAX.getMyObsidianGroup = function (userID) {

	//var assignableGroupTypeSysID_array = [];


	var selectableGroupSysID_array = [];

	var obsidianGroupMembership_GR = new GlideRecord("sys_user_grmember");
	obsidianGroupMembership_GR.addQuery("group.active", true);
	obsidianGroupMembership_GR.addQuery("user", (userID ? userID : gs.getUserID()));
	obsidianGroupMembership_GR.addEncodedQuery("group.nameSTARTSWITH" + "Obsidian");
	//obsidianGroupMembership_GR.addEncodedQuery("group.typeLIKE" + assignableGroupTypeSysID_array.join("^ORgroup.typeLIKE"));

	obsidianGroupMembership_GR.query();


	while (obsidianGroupMembership_GR.next()) {
		if (selectableGroupSysID_array.indexOf(obsidianGroupMembership_GR.group.sys_id + "") == -1) {
			selectableGroupSysID_array.push(obsidianGroupMembership_GR.getValue("group"));
		}
	}


	return selectableGroupSysID_array;

};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin_Isaac_Perez</sys_created_by>
        <sys_created_on>2022-03-09 09:18:22</sys_created_on>
        <sys_id>6a26833e1b8acd90fe9e43f1b24bcb74</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>DXCObsidianCommonUtilsAJAX</sys_name>
        <sys_package display_value="NexGen Obsidian Management" source="x_nesa_ng_obsidian">20ae71f61b8dc11006e886efe54bcbc5</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NexGen Obsidian Management">20ae71f61b8dc11006e886efe54bcbc5</sys_scope>
        <sys_update_name>sys_script_include_6a26833e1b8acd90fe9e43f1b24bcb74</sys_update_name>
        <sys_updated_by>admin_luu-ly_mai</sys_updated_by>
        <sys_updated_on>2022-05-12 09:30:30</sys_updated_on>
    </sys_script_include>
</record_update>
